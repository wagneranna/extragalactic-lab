{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "50db8fa5",
   "metadata": {},
   "source": [
    "## Example 3 : Elevation of a source for a given observatory \n",
    "\n",
    "### Aims :\n",
    " * use astropy.coordinates to compute the elevation of a source \n",
    " \n",
    "### Tools :\n",
    " * astropy.coordinates \n",
    " \n",
    " \n",
    "#### SkyCoord\n",
    "   \n",
    "   https://docs.astropy.org/en/stable/coordinates/angles.html\n",
    "    \n",
    "   https://docs.astropy.org/en/stable/coordinates/index.html\n",
    " \n",
    "   https://docs.astropy.org/en/stable/api/astropy.coordinates.SkyCoord.html"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f286afb",
   "metadata": {},
   "source": [
    "### Examples for converting angles \n",
    "\n",
    "see url above "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dee81b0a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46.2\n",
      "hms_tuple(h=3.0, m=4.0, s=48.00000000000345)\n",
      "3.0\n",
      "3h04m48s\n",
      "46d12m00s\n",
      "46:12:00\n"
     ]
    }
   ],
   "source": [
    "from astropy import units as u\n",
    "from astropy.coordinates import Angle\n",
    "a = Angle('46.2d')\n",
    "print( a.degree )\n",
    "print( a.hms )\n",
    "print( a.hms[0] )\n",
    "print( a.to_string(unit=u.hour) ) \n",
    "print( a.to_string(unit=u.degree) )\n",
    "print( a.to_string(unit=u.degree, sep=':') )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ee7cd488",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<SkyCoord (ICRS): (ra, dec) in deg\n",
      "    (299.86816667, 40.73391667)>\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'19h59m28.36s +40d44m02.1s'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from astropy.coordinates import SkyCoord\n",
    "sc_CygA_str = \"19h59m28.36s +40d44m02.10s\"\n",
    "sc_CygA = SkyCoord( sc_CygA_str )\n",
    "print(sc_CygA) \n",
    "sc_CygA.to_string('hmsdms')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "888fb20e",
   "metadata": {},
   "source": [
    "### The Horizontal coordinate frame (AltAz) at some location on Earth \n",
    "\n",
    "https://en.wikipedia.org/wiki/Horizontal_coordinate_system\n",
    "\n",
    "astropy.coordinates.AltAz allows us to define a AltAz frame, when location on Earth and time is known \n",
    "\n",
    "The Tautenburg observatory is located at a latidue of 50.9822 degree, a longitude of 11.7114 degree and a hight of 330 m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "71fd7c44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<AltAz Frame (obstime=2022-03-07 23:00:00.000, location=(3940011.93160636, 816754.83416054, 4932554.58434202) m, pressure=0.0 hPa, temperature=0.0 deg_C, relative_humidity=0.0, obswl=1.0 micron)>\n"
     ]
    }
   ],
   "source": [
    "from astropy.coordinates import EarthLocation, AltAz\n",
    "import astropy.units as u\n",
    "from astropy.time import Time\n",
    "TLS = EarthLocation( lat=50.9822*u.deg, lon=11.7114*u.deg, height=330*u.m )\n",
    "UTC_offset = +1.0 * u.hour   # CET\n",
    "midnight = Time('2022-03-08 00:00:00') - UTC_offset\n",
    "AltAz_frame  = AltAz( obstime=midnight, location=TLS )\n",
    "print(AltAz_frame)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1ca0076",
   "metadata": {},
   "source": [
    "### Excercise a: Determine the elevation of the source (at the given time)\n",
    "\n",
    "Create a plot which shows for one of your sources the elevation of the source at the location of the Tautenburg observatory as function of time for 24 hours "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "79b8d583",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
